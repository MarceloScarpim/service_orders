#!/usr/bin/env ruby

require File.expand_path('../config/environment', __dir__)

# Start a communication session with RabbitMQ
conn = Bunny.new
conn.start

# open a channel
ch = conn.create_channel

# ch.confirm_select

# declare a queue
queue  = ch.queue("aceleracao_dio_service_order.in", durable: true, auto_delete: false)

puts "\nStarting consumer!"

fanout_name = 'aceleracao_dio_users.out'
queue.bind(ch.exchange(fanout_name, type: 'fanout'))

puts "[consumer] #{queue.name} binds to #{fanout_name}"

queue.subscribe do |d_info, properties, payload|
    BunnyConsumer.call!(properties, payload)
    puts "[consumer] #{queue.name} received #{properties[:type]}, from #{properties[:app_id]}: #{payload}\n"
end

begin 
    while true
        sleep(3)
    end
rescue Interrupt
    conn.close
    puts "closing connection"
    exit
end